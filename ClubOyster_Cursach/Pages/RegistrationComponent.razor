@page "/registration"
@using ClubOyster_Cursach.Data;
@inject NavigationManager navigationManager


<PageTitle>Registration Form</PageTitle>


<EditForm Model="userModel" style="height:680px; border-radius: 10px; top:360px">
    <DataAnnotationsValidator/>

    <h3 class="h3" style="line-height:1.9 ">Регистрация</h3>
    <InputText id="name" type="text" placeholder="Логин" @bind-Value="userModel.Login"></InputText>
    <ValidationMessage For="() => userModel.Login"/>

    <InputText id="name" type="text" placeholder="Имя" @bind-Value="userModel.FirstName"></InputText>
    <ValidationMessage For="() => userModel.FirstName" />

    <InputText id="name" type="text" placeholder="Номер телефона" maxlength="11" @bind-Value="userModel.Phone"></InputText>
    <ValidationMessage For="() => userModel.Phone" />

    <InputText id="name" type="text" placeholder="Почта" @bind-Value="userModel.Email"></InputText>
    <ValidationMessage For="() => userModel.Email" />

    <InputText id="password" type="password" placeholder="Пароль" @bind-Value="userModel.Password"></InputText>
    <ValidationMessage For="() => userModel.Password" />

    <InputText id="password" type="password" placeholder="Подтверждение пароля"  @bind-Value="ConfirmPassword_"></InputText>
    <ValidationMessage For="() => userModel.Password" />

    <button type="button" style="height:35; border-radius: 20px;" @onclick="Registration">Зарегистрироваться</button>
    <button type="button" style="height:35; border-radius: 20px;" @onclick="ClearInput">Очистить поля</button>
    <button type="button" style="height:35; border-radius: 20px;" @onclick="Auth">На главную страницу</button>

    @if (check == true)
    {
        <strong class="text-center">@exeption</strong>
    }

</EditForm>

@code {
    User userModel = new User();


    private string? ConfirmPassword_;

    private bool? check;
    private string? exeption;

    private void Registration()
    {
        var users = MongoDb.FindUsers();

        if (userModel.Login != null && userModel.FirstName != null && userModel.Phone != null && userModel.Email != null && userModel.Password != null && ConfirmPassword_ != null)
        {
            if (userModel.Password == ConfirmPassword_)
            {
                foreach (var item in users)
                {
                    if (item.Login == userModel.Login)
                    {
                        return;
                    }
                    else
                    {
                        if (item.Email == userModel.Email)
                        {
                            return;
                        }
                        else
                        {
                            if (item.Phone == userModel.Phone)
                            {
                                return;
                            }
                        }
                    }
                }

                User newUser = new User()
                {
                    Login = userModel.Login,
                    FirstName = userModel.FirstName,
                    Phone = userModel.Phone,
                    Email = userModel.Email,
                    Password = userModel.Password
                };
                MongoDb.AddDb(newUser);
                navigationManager.NavigateTo("/");
            }
        }
    }

    private void ClearInput()
    {
        userModel.Login = null;
        userModel.FirstName = null;
        userModel.Phone = null;
        userModel.Email = null;
        userModel.Password = null;
        ConfirmPassword_ = null;
    }

    private void Auth()
    {
        navigationManager.NavigateTo("/");
    }
}
